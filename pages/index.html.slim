---
title: Sitepress
subtitle: Build ambitious content websites in Rails
layout: body
---

.flex.flex-col.gap-y-20.my-20.px-4
  .flex.flex-col.gap-y-12.mx-auto.max-w-3xl.justify-center.items-center.text-center
    .logo
      =image_tag "logo-brown.svg", class: "block dark:hidden", size: "260x260"
      =image_tag "logo-white.svg", class: "hidden dark:block", size: "260x260"
    h1.text-4xl.font-extrabold.text-black.dark:text-white=current_page.data.fetch("subtitle")
    p.text-2xl.text-brown-900.dark:text-brown-400.opacity-70 Manage content files in Rails with the same features you'd expect from static site generators like Jekyll, Middleman, and Bridgetown.
    .prose.prose-lg.dark:prose-invert
      p #{link_to "Embed in a Rails app", "/getting-started/rails"} in under 2 minutes
      pre.text-left
        code.min-w-full
          |
            $ bundle add sitepress-rails
            $ bin/rails generate sitepress:install
      p Or #{link_to "run it stand-alone", "/getting-started/static"} as a static site generator
      pre.text-left
        code.min-w-full
          |
            $ gem install sitepress
            $ sitepress new my-site

      p The best part? You can change it later depending on your needs.

  .flex.flex-col.gap-y-8.md:gap-y-4.mx-auto.max-w-3xl.border-brown-500.border-y.py-20
    hgroup.text-center.flex.flex-col.gap-y-2
      h2.text-4xl.font-extrabold Millions and millions of pages served
      h3.text-2xl Here's a few of the many websites running Sitepress in production

    .grid.gap-12.md:grid-cols-2.md:mt-8
      =logo image: "logos/polleverywhere.svg", url: "https://www.polleverywhere.com/", alt: "Poll Everywhere"
      =logo image: "logos/flyio.svg", url: "https://fly.io/docs", alt: "Fly.io"
      =logo image: "logos/hotwire.svg", url: "https://hotwire.io", alt: "Hotwire"
      =logo image: "logos/pushpad.svg", url: "https://pushpad.xyz", alt: "Push Pad"

  .flex.flex-col.gap-y-12.mx-auto.max-w-3xl
    hgroup.text-center.flex.flex-col.gap-y-2.mb-12
      h2.text-4xl.font-extrabold All the features you need
      h3.text-2xl Sitepress is packed with goodies that make building content websites fun and productive

    .grid.gap-10.md:grid-cols-2
      =link_to page_path("basics/frontmatter"), class: "flex flex-col gap-y-2 hover:scale-105 transition" do
        h3.font-bold.text-2xl Frontmatter
        p Add metadata to the top of your content page files that you can plug into your templates, collections, and more.

      =link_to page_path("basics/globs"), class: "flex flex-col gap-y-2 hover:scale-105 transition" do
        h3.font-bold.text-2xl Globbing
        p Quickly generate lists, navigation menus, collections, and more with <code>Dir#glob</code>.

      =link_to page_path("basics/models"), class: "flex flex-col gap-y-2 hover:scale-105 transition" do
        h3.font-bold.text-2xl Page models
        p Wrap pages in custom Ruby classes for even more powerful ways of traversing your sites content for navigation, grids, or collections.

      =link_to page_path("basics/helpers"), class: "flex flex-col gap-y-2 hover:scale-105 transition" do
        h3.font-bold.text-2xl Layouts, partials, & pages
        p Sitepress is built on top of Rails, so you will feel right at home rendering pages, layouts, & partials.

      =link_to page_path("basics/markdown"), class: "flex flex-col gap-y-2 hover:scale-105 transition" do
        h3.font-bold.text-2xl Customizable Markdown
        p Create your own flavors of Markdown to handle code highlighting, table of contents, anchor links, and more.

      =link_to page_path("basics/template-handlers"), class: "flex flex-col gap-y-2 hover:scale-105 transition" do
        h3.font-bold.text-2xl Templating languages
        p Slim, HAML, Markdown, and Erb. All the templating libraries that work with Rails will work with Sitepress, and that's a lot of stuff.

      =link_to page_path("getting-started/static"), class: "flex flex-col gap-y-2 hover:scale-105 transition" do
        h3.font-bold.text-2xl Static compiler
        p Sitepress also works as a static site compiler so you can eject the website out of your Rails app when you're ready to start breaking apart the monolith.

      =link_to page_path("getting-started/rails"), class: "flex flex-col gap-y-2 hover:scale-105 transition" do
        h3.font-bold.text-2xl Embed it in Rails
        p Sitepress is perfectly happy, and performant, serving up content right inside your Rails app without the compilation step.

  hr.opacity-90.dark:border-brown-800.md:hidden

  .flex-col.justify-center.items-center
    .prose.prose-lg.dark:prose-invert.md:dark:prose.md:dark:prose-lg.md:shadow-2xl.md:px-12.md:py-16.md:mx-auto.rounded.md:bg-gradient-to-b.from-neutral-100.to-white.origin-top-left.md:rotate-1.md:hover:rotate-0.transition-all
        markdown:
          ## Why Sitepress?

          Static site generators are great frameworks for compiling static websites and publishing them to the web, but they force you to choose between running them completely static or inside of a Rails application. Sitepress lets you do both!

          Database-backed Rails content management systems like [Refinery CMS](http://www.refinerycms.com) and [Radiant CMS](http://radiantcms.org) are difficult to sync between development, test, staging, and production environments, making them difficult to use in multi-stage development or test-driven development workflows.

          Projects like [High Voltage](https://github.com/thoughtbot/high_voltage) make it possible to embed a small, basic site into Rails, but they lack powerful features like Frontmatter and Sitemap APIs required to make building non-trivial content sites possible. It also doesn't ship with a static site compiler.

          Site generators like [Jekyll](https://jekyllrb.com), [Middleman](https://middlemanapp.com), and [Bridgetown](https://www.bridgetownrb.com) were not built with Rails integration as a primary concern, which can make embedding them in a Rails app more difficult because they have more outside dependencies to manage.

          Sitepress is the missing piece. It has all the powerful features you'd expect from a fully featured static site generator, like Frontmatter support and hierarchical page traversal, but it's capable of being embedded inside any Rails, Sinatra, or Rack app. Since all of the content is just a bunch of files, its easy to incorporate Sitepress into a multi-stage or test-driven work environment. Embed it in Rails today, make it stand-alone tomorrow. Or do the opposite.

          If you're a solopreneur building Rails applications, you'll love how easy it is to build content websites in your Rails app, which means you can spend more time shipping and less time worrying about your content management system.

  hr.opacity-90.dark:border-brown-800.md:hidden

  .flex.flex-col.gap-y-8.justify-center.items-center.max-w-xl.mx-auto
    hgroup.text-center.flex.flex-col.gap-y-2
      h2.text-4xl.font-bold Get started
      h3.text-2xl Setup takes just a few minutes regardless of your choice
    .my-4.flex.flex-col.md:flex-row.gap-x-4.font-semibold.gap-y-6.justify-center.items-center.text-center
      =link_to "Embed in a Rails App", "/getting-started/rails", class: "min-w-full md:min-w-fit inline-block rounded bg-brown-900 hover:bg-brown-800 text-brown-100 py-4 px-8 dark:outline-1 whitespace-nowrap dark:bg-brown-800 dark:hover:bg-brown-700 hover:scale-105 transition"
      =link_to "Build Stand-Alone Website", "/getting-started/static", class: "min-w-full md:min-w-fit inline-block rounded bg-brown-900 hover:bg-brown-800 text-brown-100 py-4 px-8 dark:outline-1 whitespace-nowrap dark:bg-brown-800 dark:hover:bg-brown-700 hover:scale-105 transition"
    .flex.flex-row.gap-x-4
      p If you're still not sure #{link_to "read the documentation", "/getting-started/rails", class: "underline"}, #{link_to "look at the source code on Github", "https://github.com/sitepress/sitepress", class: "underline"}, or just stop thinking about it and go for it.
